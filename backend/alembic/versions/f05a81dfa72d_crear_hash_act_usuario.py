"""crear hash, act usuario

Revision ID: f05a81dfa72d
Revises: 5e1e9b56133d
Create Date: 2025-06-19 12:46:32.009497

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'f05a81dfa72d'
down_revision: Union[str, None] = '5e1e9b56133d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('usuario') as batch_op:
        # Perform operations like adding or modifying constraints here
            batch_op.add_column(sa.Column('apodo', sa.String(), nullable=False))
            batch_op.add_column(sa.Column('hash', sa.String(), nullable=False))
            batch_op.create_unique_constraint("apodo",['apodo'])
            batch_op.drop_column('nombre')
            batch_op.drop_column('apellido')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('usuario', sa.Column('apellido', sa.VARCHAR(), nullable=False))
    op.add_column('usuario', sa.Column('nombre', sa.VARCHAR(), nullable=False))
    op.drop_constraint("None", 'usuario', type_='unique')
    op.drop_column('usuario', 'hash')
    op.drop_column('usuario', 'apodo')
    # ### end Alembic commands ###
